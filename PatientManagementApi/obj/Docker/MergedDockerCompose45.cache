name: dockercompose16431300905360146330
services:
  patientdb:
    container_name: patientdb
    environment:
      POSTGRES_DB: PatientDb
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    image: postgres
    networks:
      mynetworks: null
    ports:
      - mode: ingress
        target: 5432
        published: "5432"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: postgres_patient
        target: /var/lib/postgresql/data
        volume: {}
  patientmanagementapi:
    build:
      context: D:\patient-management-be\PatientManagementApi
      dockerfile: PatientManagementApi/Dockerfile
      args:
        BUILD_CONFIGURATION: Debug
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: PatientManagementApi
      target: base
    container_name: PatientManagementApi
    depends_on:
      patientdb:
        condition: service_started
        required: true
    entrypoint:
      - tail
      - -f
      - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ConnectionStrings__PostgresConstr: Server=patientdb;Port=5432;Database=PatientDb;User Id=postgres;Password=postgres;Include Error Detail=true
      ConnectionStrings__RedisConstr: redis-cache:6379
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: /.nuget/fallbackpackages
    image: patientmanagementapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages --additionalProbingPath /.nuget/fallbackpackages  "/app/bin/Debug/net8.0/PatientManagementApi.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      mynetworks: null
    ports:
      - mode: ingress
        target: 8080
        published: "6000"
        protocol: tcp
      - mode: ingress
        target: 8081
        published: "7012"
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: C:\Users\ADMIN\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\ADMIN\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: D:\patient-management-be\PatientManagementApi\PatientManagementApi
        target: /app
        bind:
          create_host_path: true
      - type: bind
        source: D:\patient-management-be\PatientManagementApi
        target: /src
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\ADMIN\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\ADMIN\.nuget\packages\
        target: /.nuget/packages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files (x86)\Microsoft Visual Studio\Shared\NuGetPackages
        target: /.nuget/fallbackpackages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\ADMIN\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\ADMIN\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: F:\DOWNLOAD VISSUAL\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net6.0
        target: /TokenService.Proxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: F:\DOWNLOAD VISSUAL\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\HotReloadProxy\linux-x64\net6.0
        target: /HotReloadProxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: F:\DOWNLOAD VISSUAL\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
  redis-cache:
    container_name: redis-cache
    image: redis
    networks:
      mynetworks: null
    ports:
      - mode: ingress
        target: 6379
        published: "6379"
        protocol: tcp
    restart: always
networks:
  mynetworks:
    name: mynetworks
    driver: bridge
volumes:
  postgres_patient:
    name: dockercompose16431300905360146330_postgres_patient